/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package inicio;

import Conexion_base_de_datos.Conexion;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
//ya funciona no borrar ..

//librerias posibles solo las agrege por que en los ejemplos asi salia..-.

import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.sql.rowset.CachedRowSet;
import com.sun.rowset.CachedRowSetImpl;
import java.time.Clock;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author BENJAMIN
 */
public class AsignarAsignatura extends javax.swing.JFrame {

    /**
     * Creates new form INTERFAZ
     */
    public AsignarAsignatura() {
        initComponents();
        mostrardatosencombobox1();
        mostrardatosencombobox2();
        mostrardatosencombobox3();
        mostrardatosencombobox4();
        mostrardatosencombobox5();
        mostrarasignaturaseliminar();
        mostrardatosdocente();
        setResizable(false);
        setSize(1300,735);
        setTitle("Asignar asignaturas");
        
          
        
        
    }
    
    
    
      
    //maS para los combo box
   
   void mostrarasignaturaseliminar(){
                 
       modeloasignarasignatura = new DefaultTableModel();
       modeloasignarasignatura.addColumn("Nombre");
       modeloasignarasignatura.addColumn("Materia 1");       
       modeloasignarasignatura.addColumn("Materia 2");
       modeloasignarasignatura.addColumn("Materia 3");
       modeloasignarasignatura.addColumn("Materia 4");
       modeloasignarasignatura.addColumn("Materia 5");
       modeloasignarasignatura.addColumn("iddocente");
       
       
       
           
            String sqlmodificar = "SELECT *FROM asignacion_materia WHERE nombrecompletodocente LIKE '%" + buscarasignaciones.getText() + "%' "
                    + "OR asignatura1 LIKE '%" + buscarasignaciones.getText() + "%'"
                    + "OR asignatura3 LIKE '%" + buscarasignaciones.getText() + "%'"
                    + "OR asignatura3 LIKE '%" + buscarasignaciones.getText() + "%'"
                    + "OR asignatura4 LIKE '%" + buscarasignaciones.getText() + "%'"
                    + "OR asignatura5 LIKE '%" + buscarasignaciones.getText() + "%'"
                    + "OR id_docente_asignarmateria LIKE '%" + buscarasignaciones.getText() + "%'";
        
        materiasasignadas.setModel(modeloasignarasignatura);
        String []datos = new String [10];
        try{
        Statement st = con2.createStatement();
        ResultSet rs= st.executeQuery(sqlmodificar);
        while (rs.next()){
        datos [0]=rs.getString("nombrecompletodocente");
        datos [1]=rs.getString("asignatura1");
        datos [2]=rs.getString("asignatura2");
        datos [3]=rs.getString("asignatura3");
        datos [4]=rs.getString("asignatura4");
        datos [5]=rs.getString("asignatura5");        
        datos [6]=rs.getString("id_docente_asignarmateria");
        
        
         modeloasignarasignatura.addRow(datos);
        materiasasignadas.setModel(modeloasignarasignatura);
}
    }catch (Exception e){
       //  Logger.getLogger(consultadocentes.class.getName()).log(Level.SEVERE, null, ex); 
        System.out.println("No funciona" + e);
    }
 }
    
    
    
            
            
            
        
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cuatrimestre = new javax.swing.JButton();
        Docentes = new javax.swing.JButton();
        HorariosExternos = new javax.swing.JButton();
        HorariosAlumnos = new javax.swing.JButton();
        Usuarios = new javax.swing.JButton();
        GeneraciondeHorarios = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        SGH = new javax.swing.JLabel();
        LogoUnipoli = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        HorariosAlumnos1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        comboasignatura1 = new javax.swing.JComboBox();
        comboasignatura2 = new javax.swing.JComboBox();
        comboasignatura3 = new javax.swing.JComboBox();
        comboasignatura4 = new javax.swing.JComboBox();
        comboasignatura5 = new javax.swing.JComboBox();
        nombredocenteasignatura = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        materiasasignadas = new javax.swing.JTable();
        buscarasignaciones = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        eliminarasignaciones = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(153, 255, 153));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(null);

        Cuatrimestre.setBackground(new java.awt.Color(255, 102, 0));
        Cuatrimestre.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        Cuatrimestre.setText("Cuatrimestre");
        Cuatrimestre.setAlignmentX(0.1F);
        Cuatrimestre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuatrimestreActionPerformed(evt);
            }
        });
        getContentPane().add(Cuatrimestre);
        Cuatrimestre.setBounds(68, 93, 111, 25);

        Docentes.setBackground(new java.awt.Color(255, 102, 0));
        Docentes.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        Docentes.setText("Docentes");
        Docentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DocentesActionPerformed(evt);
            }
        });
        getContentPane().add(Docentes);
        Docentes.setBounds(216, 93, 104, 25);

        HorariosExternos.setBackground(new java.awt.Color(255, 102, 0));
        HorariosExternos.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        HorariosExternos.setText("Horarios Externos");
        HorariosExternos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorariosExternosActionPerformed(evt);
            }
        });
        getContentPane().add(HorariosExternos);
        HorariosExternos.setBounds(370, 93, 141, 25);

        HorariosAlumnos.setBackground(new java.awt.Color(255, 102, 0));
        HorariosAlumnos.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        HorariosAlumnos.setText("Horarios Alumnos");
        HorariosAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorariosAlumnosActionPerformed(evt);
            }
        });
        getContentPane().add(HorariosAlumnos);
        HorariosAlumnos.setBounds(563, 93, 148, 25);

        Usuarios.setBackground(new java.awt.Color(255, 102, 0));
        Usuarios.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        Usuarios.setText("Usuarios");
        Usuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsuariosActionPerformed(evt);
            }
        });
        getContentPane().add(Usuarios);
        Usuarios.setBounds(934, 93, 93, 25);

        GeneraciondeHorarios.setBackground(new java.awt.Color(255, 102, 102));
        GeneraciondeHorarios.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        GeneraciondeHorarios.setText("Generaci√≥n de Horarios");
        GeneraciondeHorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeneraciondeHorariosActionPerformed(evt);
            }
        });
        getContentPane().add(GeneraciondeHorarios);
        GeneraciondeHorarios.setBounds(1068, 93, 173, 25);

        jSeparator1.setForeground(new java.awt.Color(255, 102, 0));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 85, 1592, 2);

        jSeparator2.setForeground(new java.awt.Color(255, 102, 0));
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 124, 1592, 2);

        jSeparator3.setForeground(new java.awt.Color(255, 102, 0));
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(0, 676, 1592, 2);

        SGH.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 24)); // NOI18N
        SGH.setText("SISTEMA DE GESTI√ìN DE HORARIOS");
        getContentPane().add(SGH);
        SGH.setBounds(233, 38, 414, 29);

        LogoUnipoli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Logo.jpg"))); // NOI18N
        getContentPane().add(LogoUnipoli);
        LogoUnipoli.setBounds(685, 20, 320, 56);

        jButton1.setBackground(new java.awt.Color(255, 102, 0));
        jButton1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton1.setText("Cerrar sesi√≥n");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(1130, 50, 130, 25);

        jLabel1.setText("Nombre del Usuario");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(1020, 60, 93, 14);

        jPanel2.setBackground(new java.awt.Color(255, 102, 0));
        jPanel2.setMaximumSize(new java.awt.Dimension(23767, 32767));
        jPanel2.setPreferredSize(new java.awt.Dimension(860, 25));

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel3.setText("Universidad Politecnica de Durango, Area de Desarollo de Software");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(397, 397, 397)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(775, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 684, 1592, 23);

        HorariosAlumnos1.setBackground(new java.awt.Color(255, 102, 0));
        HorariosAlumnos1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        HorariosAlumnos1.setText("Asignar Materias");
        HorariosAlumnos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HorariosAlumnos1ActionPerformed(evt);
            }
        });
        getContentPane().add(HorariosAlumnos1);
        HorariosAlumnos1.setBounds(747, 93, 148, 25);

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel4.setText("para eliminar asignaci√≥n");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(1020, 290, 170, 20);

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel6.setText("Seleccione el Docente para Asignar Asignatura");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(680, 200, 282, 17);

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel5.setText("Materia 1");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 520, 71, 21);

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel7.setText("Materia 2");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(40, 580, 71, 21);

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel8.setText("Materia 3");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(480, 460, 71, 21);

        jLabel9.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel9.setText("Materia 4");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(480, 520, 71, 21);

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel10.setText("Materia 5");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(480, 580, 71, 21);

        jButton2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(790, 611, 100, 25);

        jButton3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton3.setText("Cancelar");
        getContentPane().add(jButton3);
        jButton3.setBounds(920, 611, 100, 25);

        comboasignatura1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboasignatura1ActionPerformed(evt);
            }
        });
        getContentPane().add(comboasignatura1);
        comboasignatura1.setBounds(150, 520, 283, 20);

        comboasignatura2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboasignatura2MouseClicked(evt);
            }
        });
        comboasignatura2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboasignatura2ActionPerformed(evt);
            }
        });
        getContentPane().add(comboasignatura2);
        comboasignatura2.setBounds(150, 580, 283, 20);

        getContentPane().add(comboasignatura3);
        comboasignatura3.setBounds(590, 460, 280, 20);

        getContentPane().add(comboasignatura4);
        comboasignatura4.setBounds(590, 520, 283, 20);

        comboasignatura5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboasignatura5ActionPerformed(evt);
            }
        });
        getContentPane().add(comboasignatura5);
        comboasignatura5.setBounds(590, 580, 283, 20);

        nombredocenteasignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombredocenteasignaturaActionPerformed(evt);
            }
        });
        getContentPane().add(nombredocenteasignatura);
        nombredocenteasignatura.setBounds(150, 460, 283, 20);

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel11.setText("Docente");
        getContentPane().add(jLabel11);
        jLabel11.setBounds(40, 460, 62, 21);

        materiasasignadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(materiasasignadas);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 230, 940, 180);

        buscarasignaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarasignacionesActionPerformed(evt);
            }
        });
        buscarasignaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscarasignacionesKeyPressed(evt);
            }
        });
        getContentPane().add(buscarasignaciones);
        buscarasignaciones.setBounds(220, 190, 179, 20);

        jLabel12.setText("Buscar docente asignado");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(50, 190, 190, 14);

        eliminarasignaciones.setText("Eliminar asignaci√≥n");
        eliminarasignaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarasignacionesActionPerformed(evt);
            }
        });
        getContentPane().add(eliminarasignaciones);
        eliminarasignaciones.setBounds(1020, 320, 150, 23);

        jLabel13.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel13.setText("Asignar Asignatura");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(800, 160, 210, 21);

        jLabel14.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel14.setText("Seleccione un docente ");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(1020, 270, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HorariosExternosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorariosExternosActionPerformed
        // Link para modulo horarios externos
        HorariosExternos obj=new HorariosExternos();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_HorariosExternosActionPerformed

    private void UsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsuariosActionPerformed
        // Link para modulo usuarios
        Usuarios obj=new Usuarios();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_UsuariosActionPerformed

    private void GeneraciondeHorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeneraciondeHorariosActionPerformed
        // Link para modulo usuarios
        PaginaPrincipalGeneraciondeHorarios obj=new PaginaPrincipalGeneraciondeHorarios();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_GeneraciondeHorariosActionPerformed

    private void CuatrimestreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuatrimestreActionPerformed
        // Link para modulo cuatrimestres
        cuatrimestres obj=new cuatrimestres();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_CuatrimestreActionPerformed

    private void HorariosAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorariosAlumnosActionPerformed
        // Link para modulo horarios alumnos
        HorariosAlumnos obj=new HorariosAlumnos();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_HorariosAlumnosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Link para modulo cerrar sesion
        IngresaralSistema obj=new IngresaralSistema();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void HorariosAlumnos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HorariosAlumnos1ActionPerformed
        // Link para modulo horarios alumnos
        AsignarAsignatura obj=new AsignarAsignatura();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_HorariosAlumnos1ActionPerformed

    private void DocentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DocentesActionPerformed
        // Link para modulo docentes
        Docentes obj=new Docentes();
        obj.setVisible(true);
        dispose();  
    }//GEN-LAST:event_DocentesActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String mensajeerror="Error al guardar";
        //podemos programarlo de esta manera o de la anterior donde separabamos donde teniamos el String
        //getSelectedItem va despues del combo box ----
        
        //String sql="INSERT INTO cuatrimestre (no_cuatrimestre,turno,grupo)VALUES('"+cuatrimestreactivar.getSelectedItem()+"','"+turnoactivar.getSelectedItem()+"','"+grupoactivar.getSelectedItem()+"')";
            
       
       
        String sqlasignaturas="INSERT INTO asignacion_materia (asignatura1,asignatura2,asignatura3,asignatura4,asignatura5,nombrecompletodocente,id_docente_asignarmateria) VALUES ('"+comboasignatura1.getSelectedItem()+"','"+comboasignatura2.getSelectedItem()+"','"+comboasignatura3.getSelectedItem()+"','"+comboasignatura4.getSelectedItem()+"','"+comboasignatura5.getSelectedItem()+"','"+nombredocenteasignatura.getSelectedItem()+"','"+iddocente.get(nombredocenteasignatura.getSelectedIndex())+"')";
        try {
            //se usa el mismo execute y preparestatement
            PreparedStatement pst=con3.prepareStatement(sqlasignaturas);
             //pst.setString(1,tablaasignarasignaturas.getText());
            int n=pst.executeUpdate();
            if (n>=0){
             //mensajes de felicidades
                JOptionPane.showMessageDialog(rootPane,"registrado con exito en la base de datos");
                System.out.println("Guardado correctamente");
                
                // poner el metodo actualizar mostrardatos();
            }
            {
            mostrarasignaturaseliminar();
            }
        }catch (Exception e){
            //lo puse de esta manera para mostrarle que no introdujo correctamente los datos
            JOptionPane.showMessageDialog(rootPane,mensajeerror);
            //este mensaje solo se imprimira en el registro--
            System.out.println("Ingresa los datos correctamente" + e);
            mostrarasignaturaseliminar();
        
    }  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboasignatura1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboasignatura1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboasignatura1ActionPerformed

    private void comboasignatura2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboasignatura2ActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_comboasignatura2ActionPerformed

    private void comboasignatura2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboasignatura2MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_comboasignatura2MouseClicked

    private void comboasignatura5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboasignatura5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboasignatura5ActionPerformed

    private void nombredocenteasignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombredocenteasignaturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombredocenteasignaturaActionPerformed

    private void buscarasignacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscarasignacionesKeyPressed
        // TODO add your handling code here:
        mostrarasignaturaseliminar();
    }//GEN-LAST:event_buscarasignacionesKeyPressed

    private void buscarasignacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarasignacionesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarasignacionesActionPerformed

    private void eliminarasignacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarasignacionesActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(rootPane, id);
      String id=materiasasignadas.getValueAt(materiasasignadas.getSelectedRow(), 0).toString();
        try {
            
            // si gustamos imprimir el id
            //JOptionPane.showMessageDialog(rootPane, id);
            Statement st = con3.createStatement();
          //modelo.executeUpdate("DELETE FROM asignatura WHERE ='"+id+"'");
       st.executeUpdate("DELETE  FROM asignacion_materia WHERE nombrecompletodocente='"+id+"'");
                  
             JOptionPane.showMessageDialog(rootPane,"Eliminado correctamente");
                System.out.println("Eliminado bien");
                //para refrescar la pantalla
                mostrarasignaturaseliminar();
                
            //ResultSet rs= st.executeQuery("DELETE FROM asignatura WHERE cuatrimestre_id='"+id+"'");
        //st=executeQuery("DELETE FROM asignatura WHERE ='"+id+"'");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane , e );
            JOptionPane.showMessageDialog(rootPane,"No es posible eliminar");
                System.out.println("Eliminado mal");
        }
          
    }//GEN-LAST:event_eliminarasignacionesActionPerformed
 
   //combobox numero 1
    private void mostrardatosencombobox1(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre FROM asignatura";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        comboasignatura1.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre"));
         
         modelocombo.add(rs.getString("nombre"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           comboasignatura1.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }
    //combobox numero 2
    private void mostrardatosencombobox2(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre FROM asignatura";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        comboasignatura2.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre"));
         
         modelocombo.add(rs.getString("nombre"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           comboasignatura2.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }
    //combobox numero 3
    private void mostrardatosencombobox3(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre FROM asignatura";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        comboasignatura3.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre"));
         
         modelocombo.add(rs.getString("nombre"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           comboasignatura3.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }
    //combobox numero 4
    private void mostrardatosencombobox4(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre FROM asignatura";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        comboasignatura4.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre"));
         
         modelocombo.add(rs.getString("nombre"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           comboasignatura4.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }
    //combobox numero 5
    private void mostrardatosencombobox5(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre FROM asignatura";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        comboasignatura5.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre"));
         
         modelocombo.add(rs.getString("nombre"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           comboasignatura5.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }
    //para seleccionar el docente
    private void mostrardatosdocente(){
        ArrayList modelocombo=new ArrayList();
        String consulta="SELECT nombre_completo,id_docente FROM docentes";
       try {
        Statement st= con3.createStatement();
        ResultSet rs =st.executeQuery(consulta);
        nombredocenteasignatura.removeAllItems();
         while(rs.next()){
             System.out.println(rs.getString("nombre_completo"));
         
         modelocombo.add(rs.getString("nombre_completo"));
         iddocente.add(rs.getString("id_docente"));
         //cmbDB.addItem("modelocombo");
         //String consultaatabla = rs.getString("nombre");
         }  
         
         for(int i=0; i<modelocombo.size();i++){
           nombredocenteasignatura.addItem(modelocombo.get(i));  
         }
                   
        System.out.println("Si consulta");
        //System.out.println(rs.getString("nombre"));
           //JOptionPane.showMessageDialog(rootPane,"Se consulto correctamente");
         
        } catch (Exception e) {
            System.out.println("No funciona"+e);
            JOptionPane.showMessageDialog(rootPane,"Error al consultar");
        } 
    
    
    }



    
    /**
     * @param args the command line arguments
     */
    
 ArrayList iddocente=new ArrayList();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cuatrimestre;
    private javax.swing.JButton Docentes;
    private javax.swing.JButton GeneraciondeHorarios;
    private javax.swing.JButton HorariosAlumnos;
    private javax.swing.JButton HorariosAlumnos1;
    private javax.swing.JButton HorariosExternos;
    private javax.swing.JLabel LogoUnipoli;
    private javax.swing.JLabel SGH;
    private javax.swing.JButton Usuarios;
    private javax.swing.JTextField buscarasignaciones;
    private javax.swing.JComboBox comboasignatura1;
    private javax.swing.JComboBox comboasignatura2;
    private javax.swing.JComboBox comboasignatura3;
    private javax.swing.JComboBox comboasignatura4;
    private javax.swing.JComboBox comboasignatura5;
    private javax.swing.JButton eliminarasignaciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable materiasasignadas;
    private javax.swing.JComboBox nombredocenteasignatura;
    // End of variables declaration//GEN-END:variables

 Conexion con=new Conexion();
        Connection con2=con.conexion();
        Connection con3=con.conexion();
        DefaultTableModel modeloasignarasignatura;
        
        //otra conexion para ver si funciona el combo box consultando de la base de datos
        
       
        
        
        }